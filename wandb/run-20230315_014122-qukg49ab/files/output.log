=> merge config from configs/alexnet_base.yaml
[32m[2023-03-15 01:41:25 alexnet][33m(main.py 236)[39m: INFO Full config saved to output/alexnet/config.yaml
[32m[2023-03-15 01:41:25 alexnet][33m(main.py 242)[39m: INFO AUG:
  COLOR_JITTER: 0.4
  RAND_AUGMENT: rand-m9-mstd0.5-inc1
BASE:
- ''
DATA:
  BATCH_SIZE: 128
  DATASET: cifar10
  DATA_PATH: ''
  IMG_SIZE: 70
  INTERPOLATION: bicubic
  NUM_WORKERS: 32
  PIN_MEMORY: true
EVAL_MODE: false
MODEL:
  DROP_RATE: 0.0
  NAME: alexnet
  NUM_CLASSES: 200
  RESNET: {}
  RESUME: ''
OUTPUT: output/alexnet
PRINT_FREQ: 99999
SAVE_FREQ: 5
SEED: 0
TEST:
  CROP: true
  SEQUENTIAL: false
  SHUFFLE: false
TRAIN:
  ACCUMULATION_STEPS: 1
  EPOCHS: 50
  LR: 0.0003
  LR_SCHEDULER:
    NAME: cosine
  MIN_LR: 3.0e-05
  OPTIMIZER:
    BETAS:
    - 0.9
    - 0.999
    EPS: 1.0e-08
    MOMENTUM: 0.9
    NAME: adamw
  START_EPOCH: 0
  WARMUP_EPOCHS: 10
  WARMUP_LR: 3.0e-05
[32m[2023-03-15 01:41:25 alexnet][33m(main.py 243)[39m: INFO {"cfg": "configs/alexnet_base.yaml", "opts": null, "batch_size": null, "data_path": null, "resume": null, "output": "output", "eval": false, "throughput": false}
Files already downloaded and verified
Files already downloaded and verified
Files already downloaded and verified
Unsupported operator aten::max_pool2d encountered 3 time(s)
  0%|                                                       | 0/391 [00:00<?, ?it/s]
[32m[2023-03-15 01:41:31 alexnet][33m(main.py 71)[39m: INFO AlexNet(
  #params: 57.82M, #flops: 95.59M
  (features): Sequential(
    #params: 2.47M, #flops: 40.24M
    (0): Conv2d(
      3, 64, kernel_size=(11, 11), stride=(4, 4), padding=(2, 2)
      #params: 23.3K, #flops: 5.95M
    )
    (1): ReLU()
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(
      64, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2)
      #params: 0.31M, #flops: 15.05M
    )
    (4): ReLU()
    (5): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(
      192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
      #params: 0.66M, #flops: 5.97M
    )
    (7): ReLU()
    (8): Conv2d(
      384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
      #params: 0.88M, #flops: 7.96M
    )
    (9): ReLU()
    (10): Conv2d(
      256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
      #params: 0.59M, #flops: 5.31M
    )
    (11): ReLU()
    (12): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (13): AdaptiveAvgPool2d(
      output_size=(6, 6)
      #params: 0, #flops: 0.26K
    )
  )
  (classifier): Sequential(
    #params: 55.35M, #flops: 55.35M
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(
      in_features=9216, out_features=4096, bias=True
      #params: 37.75M, #flops: 37.75M
    )
    (2): ReLU()
    (3): Dropout(p=0.5, inplace=False)
    (4): Linear(
      in_features=4096, out_features=4096, bias=True
      #params: 16.78M, #flops: 16.78M
    )
    (5): ReLU()
    (6): Linear(
      in_features=4096, out_features=200, bias=True
      #params: 0.82M, #flops: 0.82M
    )
  )
)
[32m[2023-03-15 01:41:31 alexnet][33m(main.py 72)[39m: INFO number of params: 57.82324 M
[32m[2023-03-15 01:41:31 alexnet][33m(main.py 73)[39m: INFO flops: 95.588608 MFLOPS





 88%|███████████████████████████████████████▍     | 343/391 [00:09<00:00, 49.30it/s]
[32m[2023-03-15 01:41:41 alexnet][33m(main.py 155)[39m: INFO Train: [0/50]	lr 0.000300	time 0.0218 (0.0267)	loss 1.3763 (1.9251)	Acc@1 47.500 (27.170)	Mem 1179MB
[32m[2023-03-15 01:41:41 alexnet][33m(main.py 164)[39m: INFO EPOCH 0 training takes 0:00:10
[32m[2023-03-15 01:41:41 alexnet][33m(main.py 93)[39m: INFO  * Train Acc 27.170 Train Loss 1.925
[32m[2023-03-15 01:41:41 alexnet][33m(main.py 94)[39m: INFO Accuracy of the network on the 50000 train images: 27.2%
[32m[2023-03-15 01:41:44 alexnet][33m(main.py 198)[39m: INFO Validate: 	Time 0.004 (0.025)	Loss 1.3178 (1.4122)	Acc@1 68.750 (45.620)	Mem 1179MB
[32m[2023-03-15 01:41:44 alexnet][33m(main.py 98)[39m: INFO  * Val Acc 45.620 Val Loss 1.412
[32m[2023-03-15 01:41:44 alexnet][33m(main.py 99)[39m: INFO Accuracy of the network on the 10000 val images: 45.6%
[32m[2023-03-15 01:41:44 alexnet][33m(load_save.py 48)[39m: INFO output/alexnet/ckpt_best.pth saving......
  0%|                                               | 1/391 [00:01<10:16,  1.58s/it]
[32m[2023-03-15 01:41:47 alexnet][33m(load_save.py 50)[39m: INFO output/alexnet/ckpt_best.pth saved !!!




 76%|██████████████████████████████████▍          | 299/391 [00:07<00:01, 48.79it/s]
[32m[2023-03-15 01:41:56 alexnet][33m(main.py 155)[39m: INFO Train: [1/50]	lr 0.000300	time 0.0178 (0.0244)	loss 1.4737 (1.3665)	Acc@1 53.750 (50.088)	Mem 1179MB
[32m[2023-03-15 01:41:56 alexnet][33m(main.py 164)[39m: INFO EPOCH 1 training takes 0:00:09
[32m[2023-03-15 01:41:56 alexnet][33m(main.py 93)[39m: INFO  * Train Acc 50.088 Train Loss 1.367
[32m[2023-03-15 01:41:56 alexnet][33m(main.py 94)[39m: INFO Accuracy of the network on the 50000 train images: 50.1%
  2%|▋                                              | 6/391 [00:01<01:23,  4.61it/s]
[32m[2023-03-15 01:41:59 alexnet][33m(main.py 198)[39m: INFO Validate: 	Time 0.005 (0.027)	Loss 1.0820 (1.1658)	Acc@1 56.250 (58.510)	Mem 1179MB
[32m[2023-03-15 01:41:59 alexnet][33m(main.py 98)[39m: INFO  * Val Acc 58.510 Val Loss 1.166
[32m[2023-03-15 01:41:59 alexnet][33m(main.py 99)[39m: INFO Accuracy of the network on the 10000 val images: 58.5%




 77%|██████████████████████████████████▋          | 301/391 [00:07<00:01, 49.36it/s]
[32m[2023-03-15 01:42:08 alexnet][33m(main.py 155)[39m: INFO Train: [2/50]	lr 0.000299	time 0.0178 (0.0244)	loss 1.4294 (1.1580)	Acc@1 55.000 (58.838)	Mem 1179MB
[32m[2023-03-15 01:42:08 alexnet][33m(main.py 164)[39m: INFO EPOCH 2 training takes 0:00:09
[32m[2023-03-15 01:42:08 alexnet][33m(main.py 93)[39m: INFO  * Train Acc 58.838 Train Loss 1.158
[32m[2023-03-15 01:42:08 alexnet][33m(main.py 94)[39m: INFO Accuracy of the network on the 50000 train images: 58.8%
  4%|█▉                                            | 16/391 [00:01<00:25, 14.83it/s]
[32m[2023-03-15 01:42:11 alexnet][33m(main.py 198)[39m: INFO Validate: 	Time 0.003 (0.026)	Loss 1.5653 (1.0494)	Acc@1 50.000 (62.960)	Mem 1179MB
[32m[2023-03-15 01:42:11 alexnet][33m(main.py 98)[39m: INFO  * Val Acc 62.960 Val Loss 1.049
[32m[2023-03-15 01:42:11 alexnet][33m(main.py 99)[39m: INFO Accuracy of the network on the 10000 val images: 63.0%




 80%|████████████████████████████████████▏        | 314/391 [00:07<00:01, 49.05it/s]
[32m[2023-03-15 01:42:20 alexnet][33m(main.py 155)[39m: INFO Train: [3/50]	lr 0.000297	time 0.0178 (0.0242)	loss 1.0250 (1.0112)	Acc@1 58.750 (64.804)	Mem 1179MB
[32m[2023-03-15 01:42:20 alexnet][33m(main.py 164)[39m: INFO EPOCH 3 training takes 0:00:09
[32m[2023-03-15 01:42:20 alexnet][33m(main.py 93)[39m: INFO  * Train Acc 64.804 Train Loss 1.011
[32m[2023-03-15 01:42:20 alexnet][33m(main.py 94)[39m: INFO Accuracy of the network on the 50000 train images: 64.8%
  0%|                                                       | 0/391 [00:00<?, ?it/s]Exception ignored in: <function _releaseLock at 0x7f7c5522ba30>
Traceback (most recent call last):
  File "/home/sselvan/miniconda3/envs/vision-zoo/lib/python3.10/logging/__init__.py", line 228, in _releaseLock
    def _releaseLock():
KeyboardInterrupt:
[32m[2023-03-15 01:42:22 alexnet][33m(main.py 198)[39m: INFO Validate: 	Time 0.003 (0.026)	Loss 1.0583 (0.9629)	Acc@1 43.750 (66.710)	Mem 1179MB
[32m[2023-03-15 01:42:22 alexnet][33m(main.py 98)[39m: INFO  * Val Acc 66.710 Val Loss 0.963
[32m[2023-03-15 01:42:22 alexnet][33m(main.py 99)[39m: INFO Accuracy of the network on the 10000 val images: 66.7%
[32m[2023-03-15 01:42:22 alexnet][33m(main.py 105)[39m: INFO Max accuracy: 66.71%
Traceback (most recent call last):
  File "/home/sselvan/NMEP/sp23-nmep-hw1/main.py", line 245, in <module>
    main(config)
  File "/home/sselvan/NMEP/sp23-nmep-hw1/main.py", line 92, in main
    train_acc1, train_loss = train_one_epoch(config, model, criterion, data_loader_train, optimizer, epoch)
  File "/home/sselvan/NMEP/sp23-nmep-hw1/main.py", line 150, in train_one_epoch
    batch_time.update(time.time() - end)
KeyboardInterrupt