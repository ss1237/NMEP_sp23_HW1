=> merge config from configs/alexnet_base.yaml
[32m[2023-03-15 02:56:39 alexnet][33m(main.py 239)[39m: INFO Full config saved to output/alexnet/config.yaml
[32m[2023-03-15 02:56:39 alexnet][33m(main.py 245)[39m: INFO AUG:
  COLOR_JITTER: 0.4
  RAND_AUGMENT: rand-m9-mstd0.5-inc1
BASE:
- ''
DATA:
  BATCH_SIZE: 64
  DATASET: cifar10
  DATA_PATH: ''
  IMG_SIZE: 70
  INTERPOLATION: bicubic
  NUM_WORKERS: 32
  PIN_MEMORY: true
EVAL_MODE: false
MODEL:
  DROP_RATE: 0.0
  NAME: alexnet
  NUM_CLASSES: 200
  RESNET: {}
  RESUME: ''
OUTPUT: output/alexnet
PRINT_FREQ: 99999
SAVE_FREQ: 5
SEED: 0
TEST:
  CROP: true
  SEQUENTIAL: false
  SHUFFLE: false
TRAIN:
  ACCUMULATION_STEPS: 1
  EPOCHS: 5
  LR: 0.0003
  LR_SCHEDULER:
    NAME: cosine
  MIN_LR: 3.0e-05
  OPTIMIZER:
    BETAS:
    - 0.9
    - 0.999
    EPS: 1.0e-08
    MOMENTUM: 0.9
    NAME: adamw
  START_EPOCH: 0
  WARMUP_EPOCHS: 10
  WARMUP_LR: 3.0e-05
[32m[2023-03-15 02:56:39 alexnet][33m(main.py 246)[39m: INFO {"cfg": "configs/alexnet_base.yaml", "opts": null, "batch_size": null, "data_path": null, "resume": null, "output": "output", "eval": false, "throughput": false}
Files already downloaded and verified
Files already downloaded and verified
Files already downloaded and verified
[32m[2023-03-15 02:56:45 alexnet][33m(main.py 71)[39m: INFO AlexNet(
  #params: 57.82M, #flops: 95.59M
  (features): Sequential(
    #params: 2.47M, #flops: 40.24M
    (0): Conv2d(
      3, 64, kernel_size=(11, 11), stride=(4, 4), padding=(2, 2)
      #params: 23.3K, #flops: 5.95M
    )
    (1): ReLU()
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(
      64, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2)
      #params: 0.31M, #flops: 15.05M
    )
    (4): ReLU()
    (5): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(
      192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
      #params: 0.66M, #flops: 5.97M
    )
    (7): ReLU()
    (8): Conv2d(
      384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
      #params: 0.88M, #flops: 7.96M
    )
    (9): ReLU()
    (10): Conv2d(
      256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
      #params: 0.59M, #flops: 5.31M
    )
    (11): ReLU()
    (12): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (13): AdaptiveAvgPool2d(
      output_size=(6, 6)
      #params: 0, #flops: 0.26K
    )
  )
  (classifier): Sequential(
    #params: 55.35M, #flops: 55.35M
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(
      in_features=9216, out_features=4096, bias=True
      #params: 37.75M, #flops: 37.75M
    )
    (2): ReLU()
    (3): Dropout(p=0.5, inplace=False)
    (4): Linear(
      in_features=4096, out_features=4096, bias=True
      #params: 16.78M, #flops: 16.78M
    )
    (5): ReLU()
    (6): Linear(
      in_features=4096, out_features=200, bias=True
      #params: 0.82M, #flops: 0.82M
    )
  )
)
[32m[2023-03-15 02:56:45 alexnet][33m(main.py 72)[39m: INFO number of params: 57.82324 M
[32m[2023-03-15 02:56:45 alexnet][33m(main.py 73)[39m: INFO flops: 95.588608 MFLOPS
[32m[2023-03-15 02:56:45 alexnet][33m(main.py 89)[39m: INFO Start training
Unsupported operator aten::max_pool2d encountered 3 time(s)







 89%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Ž            | 693/782 [00:13<00:01, 58.29it/s]
[32m[2023-03-15 02:57:00 alexnet][33m(main.py 155)[39m: INFO Train: [0/5]	lr 0.000300	time 0.0223 (0.0192)	loss 1.2234 (1.8458)	Acc@1 68.750 (30.268)	Mem 1176MB
[32m[2023-03-15 02:57:00 alexnet][33m(main.py 164)[39m: INFO EPOCH 0 training takes 0:00:15
[32m[2023-03-15 02:57:00 alexnet][33m(main.py 93)[39m: INFO  * Train Acc 30.268 Train Loss 1.846
[32m[2023-03-15 02:57:00 alexnet][33m(main.py 94)[39m: INFO Accuracy of the network on the 50000 train images: 30.3%
[32m[2023-03-15 02:57:02 alexnet][33m(main.py 201)[39m: INFO Validate: 	Time 0.002 (0.013)	Loss 1.3819 (1.4748)	Acc@1 50.000 (45.810)	Mem 1176MB
[32m[2023-03-15 02:57:02 alexnet][33m(main.py 98)[39m: INFO  * Val Acc 45.810 Val Loss 1.475
[32m[2023-03-15 02:57:02 alexnet][33m(main.py 99)[39m: INFO Accuracy of the network on the 10000 val images: 45.8%
[32m[2023-03-15 02:57:02 alexnet][33m(load_save.py 48)[39m: INFO output/alexnet/ckpt_best.pth saving......
[32m[2023-03-15 02:57:05 alexnet][33m(load_save.py 50)[39m: INFO output/alexnet/ckpt_best.pth saved !!!
[32m[2023-03-15 02:57:05 alexnet][33m(main.py 105)[39m: INFO Max accuracy: 45.81%







 90%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–‹           | 703/782 [00:13<00:01, 59.88it/s]
[32m[2023-03-15 02:57:20 alexnet][33m(main.py 155)[39m: INFO Train: [1/5]	lr 0.000271	time 0.0151 (0.0190)	loss 1.2942 (1.3359)	Acc@1 50.000 (52.118)	Mem 1176MB
[32m[2023-03-15 02:57:20 alexnet][33m(main.py 164)[39m: INFO EPOCH 1 training takes 0:00:14
[32m[2023-03-15 02:57:20 alexnet][33m(main.py 93)[39m: INFO  * Train Acc 52.118 Train Loss 1.336
[32m[2023-03-15 02:57:20 alexnet][33m(main.py 94)[39m: INFO Accuracy of the network on the 50000 train images: 52.1%
  0%|                                                                                                                          | 0/782 [00:00<?, ?it/s]
[32m[2023-03-15 02:57:22 alexnet][33m(main.py 201)[39m: INFO Validate: 	Time 0.002 (0.014)	Loss 1.0652 (1.2180)	Acc@1 56.250 (56.970)	Mem 1176MB
[32m[2023-03-15 02:57:22 alexnet][33m(main.py 98)[39m: INFO  * Val Acc 56.970 Val Loss 1.218
[32m[2023-03-15 02:57:22 alexnet][33m(main.py 99)[39m: INFO Accuracy of the network on the 10000 val images: 57.0%







 98%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Š  | 767/782 [00:14<00:00, 61.63it/s]
[32m[2023-03-15 02:57:37 alexnet][33m(main.py 155)[39m: INFO Train: [2/5]	lr 0.000196	time 0.0155 (0.0189)	loss 1.3390 (1.1150)	Acc@1 50.000 (60.824)	Mem 1176MB
[32m[2023-03-15 02:57:37 alexnet][33m(main.py 164)[39m: INFO EPOCH 2 training takes 0:00:14
[32m[2023-03-15 02:57:37 alexnet][33m(main.py 93)[39m: INFO  * Train Acc 60.824 Train Loss 1.115

[32m[2023-03-15 02:57:37 alexnet][33m(main.py 94)[39m: INFO Accuracy of the network on the 50000 train images: 60.8%
  0%|                                                                                                                          | 0/782 [00:00<?, ?it/s]
[32m[2023-03-15 02:57:39 alexnet][33m(main.py 201)[39m: INFO Validate: 	Time 0.002 (0.014)	Loss 1.0318 (1.0440)	Acc@1 62.500 (62.710)	Mem 1176MB
[32m[2023-03-15 02:57:39 alexnet][33m(main.py 98)[39m: INFO  * Val Acc 62.710 Val Loss 1.044
[32m[2023-03-15 02:57:39 alexnet][33m(main.py 99)[39m: INFO Accuracy of the network on the 10000 val images: 62.7%







 92%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Š         | 718/782 [00:13<00:01, 59.29it/s]
[32m[2023-03-15 02:57:54 alexnet][33m(main.py 155)[39m: INFO Train: [3/5]	lr 0.000104	time 0.0148 (0.0186)	loss 0.8934 (0.9363)	Acc@1 56.250 (67.268)	Mem 1176MB
[32m[2023-03-15 02:57:54 alexnet][33m(main.py 164)[39m: INFO EPOCH 3 training takes 0:00:14
[32m[2023-03-15 02:57:54 alexnet][33m(main.py 93)[39m: INFO  * Train Acc 67.268 Train Loss 0.936
[32m[2023-03-15 02:57:54 alexnet][33m(main.py 94)[39m: INFO Accuracy of the network on the 50000 train images: 67.3%
  0%|                                                                                                                          | 0/782 [00:00<?, ?it/s]
[32m[2023-03-15 02:57:56 alexnet][33m(main.py 201)[39m: INFO Validate: 	Time 0.002 (0.014)	Loss 0.9156 (0.9087)	Acc@1 56.250 (68.800)	Mem 1176MB
[32m[2023-03-15 02:57:56 alexnet][33m(main.py 98)[39m: INFO  * Val Acc 68.800 Val Loss 0.909
[32m[2023-03-15 02:57:56 alexnet][33m(main.py 99)[39m: INFO Accuracy of the network on the 10000 val images: 68.8%







 97%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–‹   | 759/782 [00:14<00:00, 60.68it/s]
[32m[2023-03-15 02:58:11 alexnet][33m(main.py 155)[39m: INFO Train: [4/5]	lr 0.000029	time 0.0149 (0.0185)	loss 0.5573 (0.8073)	Acc@1 81.250 (71.974)	Mem 1176MB
[32m[2023-03-15 02:58:11 alexnet][33m(main.py 164)[39m: INFO EPOCH 4 training takes 0:00:14
[32m[2023-03-15 02:58:11 alexnet][33m(main.py 93)[39m: INFO  * Train Acc 71.974 Train Loss 0.807

[32m[2023-03-15 02:58:11 alexnet][33m(main.py 94)[39m: INFO Accuracy of the network on the 50000 train images: 72.0%
[32m[2023-03-15 02:58:13 alexnet][33m(main.py 201)[39m: INFO Validate: 	Time 0.002 (0.013)	Loss 0.6626 (0.8580)	Acc@1 56.250 (69.980)	Mem 1176MB
[32m[2023-03-15 02:58:13 alexnet][33m(main.py 98)[39m: INFO  * Val Acc 69.980 Val Loss 0.858
[32m[2023-03-15 02:58:13 alexnet][33m(main.py 99)[39m: INFO Accuracy of the network on the 10000 val images: 70.0%
[32m[2023-03-15 02:58:13 alexnet][33m(load_save.py 48)[39m: INFO output/alexnet/ckpt_best.pth saving......
  0%|                                                                                                                          | 0/157 [00:00<?, ?it/s]
[32m[2023-03-15 02:58:16 alexnet][33m(load_save.py 50)[39m: INFO output/alexnet/ckpt_best.pth saved !!!
[32m[2023-03-15 02:58:16 alexnet][33m(main.py 105)[39m: INFO Max accuracy: 69.98%
[32m[2023-03-15 02:58:16 alexnet][33m(main.py 118)[39m: INFO Training time 0:01:31

100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 157/157 [00:02<00:00, 68.69it/s]