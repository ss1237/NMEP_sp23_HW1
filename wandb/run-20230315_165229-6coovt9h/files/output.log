=> merge config from configs/resnet18_base.yaml
=> merge config from configs/resnet18_medium_imagenet.yaml
[32m[2023-03-15 16:52:31 resnet18][33m(main.py 243)[39m: INFO Full config saved to output/resnet18/config.yaml
[32m[2023-03-15 16:52:31 resnet18][33m(main.py 249)[39m: INFO AUG:
  COLOR_JITTER: 0.4
  RAND_AUGMENT: rand-m9-mstd0.5-inc1
BASE:
- resnet18_base.yaml
DATA:
  BATCH_SIZE: 16
  DATASET: medium_imagenet
  DATA_PATH: ''
  IMG_SIZE: 32
  INTERPOLATION: bicubic
  NUM_WORKERS: 32
  PIN_MEMORY: true
EVAL_MODE: false
MODEL:
  DROP_RATE: 0.0
  NAME: resnet18
  NUM_CLASSES: 200
  RESNET: {}
  RESUME: ''
OUTPUT: output/resnet18
PRINT_FREQ: 500
SAVE_FREQ: 1
SEED: 0
TEST:
  CROP: true
  SEQUENTIAL: false
  SHUFFLE: false
TRAIN:
  ACCUMULATION_STEPS: 1
  EPOCHS: 15
  LR: 0.0003
  LR_SCHEDULER:
    NAME: cosine
  MIN_LR: 3.0e-05
  OPTIMIZER:
    BETAS:
    - 0.9
    - 0.999
    EPS: 1.0e-08
    MOMENTUM: 0.9
    NAME: adamw
  START_EPOCH: 0
  WARMUP_EPOCHS: 2
  WARMUP_LR: 3.0e-05
[32m[2023-03-15 16:52:31 resnet18][33m(main.py 250)[39m: INFO {"cfg": "configs/resnet18_medium_imagenet.yaml", "opts": null, "batch_size": null, "data_path": null, "resume": null, "output": "output", "eval": false, "throughput": false}
[32m[2023-03-15 16:52:34 resnet18][33m(main.py 73)[39m: INFO N/A indicates a possibly missing statistic due to how the module was called. Missing values are still included in the parent's total.
ResNet18(
  #params: 11.28M, #flops: 0.56G
  (conv1): Conv2d(
    3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
    #params: 1.73K, #flops: 1.77M
  )
  (bn1): BatchNorm2d(
    64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
    #params: 0.13K, #flops: 0.33M
  )
  (layer1): Sequential(
    #params: 0.15M, #flops: 0.15G
    (0): ResNetBlock(
      #params: 74.11K, #flops: 76.15M
      (conv1): Conv2d(
        64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        #params: 36.93K, #flops: 37.75M
      )
      (bn1): BatchNorm2d(
        64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
        #params: 0.13K, #flops: 0.33M
      )
      (conv2): Conv2d(
        64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        #params: 36.93K, #flops: 37.75M
      )
      (bn2): BatchNorm2d(
        64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
        #params: 0.13K, #flops: 0.33M
      )
      (shortcut): Sequential(#params: 0, #flops: N/A)
    )
    (1): ResNetBlock(
      #params: 74.11K, #flops: 76.15M
      (conv1): Conv2d(
        64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        #params: 36.93K, #flops: 37.75M
      )
      (bn1): BatchNorm2d(
        64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
        #params: 0.13K, #flops: 0.33M
      )
      (conv2): Conv2d(
        64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        #params: 36.93K, #flops: 37.75M
      )
      (bn2): BatchNorm2d(
        64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
        #params: 0.13K, #flops: 0.33M
      )
      (shortcut): Sequential(#params: 0, #flops: N/A)
    )
  )
  (layer2): Sequential(
    #params: 0.53M, #flops: 0.14G
    (0): ResNetBlock(
      #params: 0.23M, #flops: 59.21M
      (conv1): Conv2d(
        64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1)
        #params: 73.86K, #flops: 18.87M
      )
      (bn1): BatchNorm2d(
        128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
        #params: 0.26K, #flops: 0.16M
      )
      (conv2): Conv2d(
        128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        #params: 0.15M, #flops: 37.75M
      )
      (bn2): BatchNorm2d(
        128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
        #params: 0.26K, #flops: 0.16M
      )
      (shortcut): Sequential(
        #params: 8.58K, #flops: 2.26M
        (0): Conv2d(
          64, 128, kernel_size=(1, 1), stride=(2, 2)
          #params: 8.32K, #flops: 2.1M
        )
        (1): BatchNorm2d(
          128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
          #params: 0.26K, #flops: 0.16M
        )
      )
    )
    (1): ResNetBlock(
      #params: 0.3M, #flops: 75.83M
      (conv1): Conv2d(
        128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        #params: 0.15M, #flops: 37.75M
      )
      (bn1): BatchNorm2d(
        128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
        #params: 0.26K, #flops: 0.16M
      )
      (conv2): Conv2d(
        128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        #params: 0.15M, #flops: 37.75M
      )
      (bn2): BatchNorm2d(
        128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
        #params: 0.26K, #flops: 0.16M
      )
      (shortcut): Sequential(#params: 0, #flops: N/A)
    )
  )
  (layer3): Sequential(
    #params: 2.1M, #flops: 0.13G
    (0): ResNetBlock(
      #params: 0.92M, #flops: 58.97M
      (conv1): Conv2d(
        128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1)
        #params: 0.3M, #flops: 18.87M
      )
      (bn1): BatchNorm2d(
        256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
        #params: 0.51K, #flops: 81.92K
      )
      (conv2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        #params: 0.59M, #flops: 37.75M
      )
      (bn2): BatchNorm2d(
        256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
        #params: 0.51K, #flops: 81.92K
      )
      (shortcut): Sequential(
        #params: 33.54K, #flops: 2.18M
        (0): Conv2d(
          128, 256, kernel_size=(1, 1), stride=(2, 2)
          #params: 33.02K, #flops: 2.1M
        )
        (1): BatchNorm2d(
          256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
          #params: 0.51K, #flops: 81.92K
        )
      )
    )
    (1): ResNetBlock(
      #params: 1.18M, #flops: 75.66M
      (conv1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        #params: 0.59M, #flops: 37.75M
      )
      (bn1): BatchNorm2d(
        256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
        #params: 0.51K, #flops: 81.92K
      )
      (conv2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        #params: 0.59M, #flops: 37.75M
      )
      (bn2): BatchNorm2d(
        256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
        #params: 0.51K, #flops: 81.92K
      )
      (shortcut): Sequential(#params: 0, #flops: N/A)
    )
  )
  (layer4): Sequential(
    #params: 8.4M, #flops: 0.13G
    (0): ResNetBlock(
      #params: 3.67M, #flops: 58.84M
      (conv1): Conv2d(
        256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1)
        #params: 1.18M, #flops: 18.87M
      )
      (bn1): BatchNorm2d(
        512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
        #params: 1.02K, #flops: 40.96K
      )
      (conv2): Conv2d(
        512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        #params: 2.36M, #flops: 37.75M
      )
      (bn2): BatchNorm2d(
        512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
        #params: 1.02K, #flops: 40.96K
      )
      (shortcut): Sequential(
        #params: 0.13M, #flops: 2.14M
        (0): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2)
          #params: 0.13M, #flops: 2.1M
        )
        (1): BatchNorm2d(
          512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
          #params: 1.02K, #flops: 40.96K
        )
      )
    )
    (1): ResNetBlock(
      #params: 4.72M, #flops: 75.58M
      (conv1): Conv2d(
        512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        #params: 2.36M, #flops: 37.75M
      )
      (bn1): BatchNorm2d(
        512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
        #params: 1.02K, #flops: 40.96K
      )
      (conv2): Conv2d(
        512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        #params: 2.36M, #flops: 37.75M
      )
      (bn2): BatchNorm2d(
        512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
        #params: 1.02K, #flops: 40.96K
      )
      (shortcut): Sequential(#params: 0, #flops: N/A)
    )
  )
  (linear): Linear(
    in_features=512, out_features=200, bias=True
    #params: 0.1M, #flops: 0.1M
  )
)
[32m[2023-03-15 16:52:34 resnet18][33m(main.py 74)[39m: INFO number of params: 11.276168 M
[32m[2023-03-15 16:52:34 resnet18][33m(main.py 75)[39m: INFO flops: 558.592 MFLOPS
[32m[2023-03-15 16:52:34 resnet18][33m(main.py 91)[39m: INFO Start training
Unsupported operator aten::add_ encountered 28 time(s)
Unsupported operator aten::avg_pool2d encountered 1 time(s)
The following submodules of the model were never called during the trace of the graph. They may be unused, or they were accessed by direct calls to .forward() or via other python methods. In the latter case they will have zeros for statistics, though their statistics will still contribute to their parent calling module.
layer1.0.shortcut, layer1.1.shortcut, layer2.1.shortcut, layer3.1.shortcut, layer4.1.shortcut



























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▉| 95398/95421 [44:45<00:00, 37.42it/s]
[32m[2023-03-15 17:37:21 resnet18][33m(main.py 159)[39m: INFO Train: [0/15]	lr 0.000300	time 0.0315 (0.0282)	loss 2.2026 (2.2677)	Acc@1 57.143 (48.043)	Mem 285MB
[32m[2023-03-15 17:37:21 resnet18][33m(main.py 168)[39m: INFO EPOCH 0 training takes 0:44:46
[32m[2023-03-15 17:37:21 resnet18][33m(main.py 95)[39m: INFO  * Train Acc 48.043 Train Loss 2.268

[32m[2023-03-15 17:37:21 resnet18][33m(main.py 96)[39m: INFO Accuracy of the network on the 1526727 train images: 48.0%
[32m[2023-03-15 17:38:29 resnet18][33m(main.py 204)[39m: INFO Validate: 	Time 0.007 (0.006)	Loss 1.1840 (1.9464)	Acc@1 66.667 (55.202)	Mem 285MB
[32m[2023-03-15 17:38:29 resnet18][33m(main.py 100)[39m: INFO  * Val Acc 55.202 Val Loss 1.946
[32m[2023-03-15 17:38:29 resnet18][33m(main.py 101)[39m: INFO Accuracy of the network on the 190841 val images: 55.2%
[32m[2023-03-15 17:38:29 resnet18][33m(load_save.py 48)[39m: INFO output/resnet18/ckpt_best.pth saving......
[32m[2023-03-15 17:38:30 resnet18][33m(load_save.py 50)[39m: INFO output/resnet18/ckpt_best.pth saved !!!
[32m[2023-03-15 17:38:30 resnet18][33m(main.py 109)[39m: INFO Max accuracy: 55.20%



































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▉| 95384/95421 [46:02<00:01, 31.17it/s]
[32m[2023-03-15 18:24:33 resnet18][33m(main.py 159)[39m: INFO Train: [1/15]	lr 0.000297	time 0.0291 (0.0290)	loss 0.7007 (1.3634)	Acc@1 71.429 (67.791)	Mem 285MB
[32m[2023-03-15 18:24:33 resnet18][33m(main.py 168)[39m: INFO EPOCH 1 training takes 0:46:03
[32m[2023-03-15 18:24:33 resnet18][33m(main.py 95)[39m: INFO  * Train Acc 67.791 Train Loss 1.363
[32m[2023-03-15 18:24:33 resnet18][33m(main.py 96)[39m: INFO Accuracy of the network on the 1526727 train images: 67.8%
[32m[2023-03-15 18:26:11 resnet18][33m(main.py 204)[39m: INFO Validate: 	Time 0.009 (0.008)	Loss 1.3593 (1.7008)	Acc@1 66.667 (60.995)	Mem 285MB
[32m[2023-03-15 18:26:11 resnet18][33m(main.py 100)[39m: INFO  * Val Acc 60.995 Val Loss 1.701
[32m[2023-03-15 18:26:11 resnet18][33m(main.py 101)[39m: INFO Accuracy of the network on the 190841 val images: 61.0%
[32m[2023-03-15 18:26:11 resnet18][33m(load_save.py 48)[39m: INFO output/resnet18/ckpt_best.pth saving......
  0%|                                                                                                                                                                           | 0/95421 [00:00<?, ?it/s]
[32m[2023-03-15 18:26:11 resnet18][33m(load_save.py 50)[39m: INFO output/resnet18/ckpt_best.pth saved !!!











































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▉| 95376/95421 [48:27<00:01, 27.69it/s]
[32m[2023-03-15 19:14:40 resnet18][33m(main.py 159)[39m: INFO Train: [2/15]	lr 0.000287	time 0.0294 (0.0305)	loss 0.6619 (1.1276)	Acc@1 85.714 (73.205)	Mem 285MB
[32m[2023-03-15 19:14:40 resnet18][33m(main.py 168)[39m: INFO EPOCH 2 training takes 0:48:28
[32m[2023-03-15 19:14:40 resnet18][33m(main.py 95)[39m: INFO  * Train Acc 73.205 Train Loss 1.128
[32m[2023-03-15 19:14:40 resnet18][33m(main.py 96)[39m: INFO Accuracy of the network on the 1526727 train images: 73.2%
  0%|                                                                                                                                                                           | 0/95421 [00:00<?, ?it/s]
[32m[2023-03-15 19:16:15 resnet18][33m(main.py 204)[39m: INFO Validate: 	Time 0.006 (0.008)	Loss 1.6630 (1.5632)	Acc@1 55.556 (63.810)	Mem 285MB
[32m[2023-03-15 19:16:15 resnet18][33m(main.py 100)[39m: INFO  * Val Acc 63.810 Val Loss 1.563
[32m[2023-03-15 19:16:15 resnet18][33m(main.py 101)[39m: INFO Accuracy of the network on the 190841 val images: 63.8%
[32m[2023-03-15 19:16:15 resnet18][33m(load_save.py 48)[39m: INFO output/resnet18/ckpt_best.pth saving......
[32m[2023-03-15 19:16:16 resnet18][33m(load_save.py 50)[39m: INFO output/resnet18/ckpt_best.pth saved !!!














































































































































































































































































































































































































































































































































































































































































































































Traceback (most recent call last):
  File "/home/sselvan/NMEP/sp23-nmep-hw1/main.py", line 252, in <module>
    main(config)
  File "/home/sselvan/NMEP/sp23-nmep-hw1/main.py", line 94, in main
    train_acc1, train_loss = train_one_epoch(config, model, criterion, data_loader_train, optimizer, epoch)
  File "/home/sselvan/NMEP/sp23-nmep-hw1/main.py", line 145, in train_one_epoch
    outputs = model(samples)
  File "/home/sselvan/miniconda3/envs/vision-zoo/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/sselvan/NMEP/sp23-nmep-hw1/models/resnet.py", line 115, in forward
    x = self.layer4(x)
  File "/home/sselvan/miniconda3/envs/vision-zoo/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/sselvan/miniconda3/envs/vision-zoo/lib/python3.10/site-packages/torch/nn/modules/container.py", line 139, in forward
    input = module(input)
  File "/home/sselvan/miniconda3/envs/vision-zoo/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/sselvan/NMEP/sp23-nmep-hw1/models/resnet.py", line 72, in forward
    out = self.bn2(self.conv2(out))
  File "/home/sselvan/miniconda3/envs/vision-zoo/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/sselvan/miniconda3/envs/vision-zoo/lib/python3.10/site-packages/torch/nn/modules/batchnorm.py", line 168, in forward
    return F.batch_norm(
  File "/home/sselvan/miniconda3/envs/vision-zoo/lib/python3.10/site-packages/torch/nn/functional.py", line 2438, in batch_norm
    return torch.batch_norm(
KeyboardInterrupt